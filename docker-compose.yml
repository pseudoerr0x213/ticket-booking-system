services:
  postgres-user:
    image: postgres:15
    container_name: ticker-user
    environment:
      POSTGRES_DB: ticket-userdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - user_pgdata:/var/lib/postgresql/data
    networks:
      - ticket-booking

  postgres-event:
    image: postgres:15
    container_name: ticket-event
    environment:
      - POSTGRES_DB: ticket-eventdb
      - POSTGRES_USER: postgres
      - POSTGRES_PASSWORD: password
    ports:
      - "5433:5433"
    volumes:
      - event_pgdata:/var/lib/postgresql/data
    networks:
      - ticket-booking

  postgres-booking:
    image: postgres:15
    container_name: ticket-booking
    environment:
      - POSTGRES_DB: ticket-bookingdb
      - POSTGRES_USER: postgres
      - POSTGRES_PASSWORD: password
    ports:
      - "5433:5433"
    volumes:
      - booking_pgdata:/var/lib/postgresql/data
    networks:
      - ticket-booking

  redis:
    image: redis:7-alpine
    container_name: ticket-redis
    ports:
      - "6379:6379"
    networks:
      - ticket-booking

  zookeeper:
    image: bitnami/zookeeper:latest
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    networks:
      - ticket-booking

  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      ALLOW_PLAINTEXT_LISTENER: "yes"
    depends_on:
      - zookeeper
    networks:
      - ticket-booking

  user-service:
    build:
      context: ./services/user-service
    container_name: user-service
    ports:
      - "8081:8080"
    depends_on:
      - postgres-user
      - redis
      - kafka
    networks:
      - ticket-booking

  event-service:
    build:
      context: ./services/event-service
    container_name: event-service
    ports:
      - "8082:8080"
    depends_on:
      - postgres-event
      - kafka
    networks:
      - ticket-booking

  booking-service:
    build:
      context: ./services/booking-service
    container_name: booking-service
    ports:
      - "8083:8080"
    depends_on:
      - postgres-event
      - kafka
    networks:
      - ticket-booking

volumes:
  user_pgdata:
  event_pgdata:
  booking_pgdata:


networks:
  ticket-booking:
